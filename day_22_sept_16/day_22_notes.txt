NodeJs Modules
==============
-A way of encapsulating code in to separate logical units.
-Module:A set of functions you want to include in your application.
-In Node.js module system, each file is treated as a separate module.
-Node.js includes three types of modules:
	1. Core(Built-in) Modules     	  (os,fs,http,process,path,url,crypto)
	2. Local(Custom) Modules    	  (created locally in our application)
	3. Third Party(External) Modules  (can be installed using NPM/yarn, and can be used) ex:-minimist,express,mongoose,lodash,moment,chalk,cors,axios


Core Modules:
-------------
os-Get OS information
fs-work with the file system
path-handles path elegantly
url-url module includes methods for URL resolution and parsing.
querystring-querystring module includes methods to deal with query string.
http-launch a server,send requests
https-launch a SSL server
events-working with events
util-util module includes utility functions useful for programmers.



Local(Custom) Modules 
=====================
-Different Module Systems : CJS , ESM , AMD , UMD
-Node.js has two types of modules: 
	1. ES modules 
	2. CommonJS modules
-By default, Node.js treats JavaScript as CommonJS modules. But we can tell Node.js to treat JavaScript code as ES modules.
-Node.js will treat the following files as ES modules:
	a.Files ending in .mjs
	b.if "type": "module" is set in package.json


    CommonJs                     ESM
============================================
1. older                        1.Newer
2. module.exports               2.export / export default
3. require()                    3.import



ESM
===
-in ESM , there are 2 types of exports we have
  a. Default export  
  b. Named Export
// import MyReact, { Component } from 'react';
in this example 'React' is default export , 'Component' is named export

1. There can be maximum 1 default export in a file, but there can be many named exports
2. default export cann't be used with variables. it should be used with functions, classes etc
3. default export members can be imported with any name, named export members should imported with the same name they are exported.




External Modules(minimist,chalk,validator,lodash,moment)
----------------
1. Installing an npm Module
   npm install validator
2. Importing an npm Module
   const validator = require('validator')
   console.log(validator.isURL('https://www.google.co.in/')) // true
   console.log(validator.isEmail('abc@gmail.com')) // true



Node.js OS Module
=================
-The OS module provides information about the computer's operating system.

arch()	      Returns the operating system CPU architecture-32/64
cpus()	       Returns an array containing information about the computer's CPUs
endianness()	Returns the endianness of the CPU (LE-Little Endian , BE-Big Endian)
EOL	Returns the end-of-line marker for the current operating system
freemem()	Returns the number of free memory of the system
hostname()	Returns the hostname of the operating system
loadavg()	Returns an array containing the load averages, (1, 5, and 15 minutes)
networkInterfaces()	Returns the network interfaces that has a network address
platform()	Returns information about the operating system's platform
release()	Returns information about the operating system's release
tmpdir()	Returns the operating system's default directory for temporary files
totalmem()	Returns the number of total memory of the system
type()	    Returns the name of the operating system
uptime()	Returns the uptime of the operating system, in seconds
userInfo()	Returns information about the current user
availableParallelism() 
constants	 Returns an object containing the operating system's constants for process signals, error cotes etc.


